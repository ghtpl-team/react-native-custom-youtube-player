buildscript {
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.0.2"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10"
  }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["YoutubeViewPager_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["YoutubeViewPager_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  buildFeatures {
    dataBinding true
    viewBinding true
  }
}

repositories {
  mavenCentral()
  google()

  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has("reactNativeAndroidRoot")) {
    defaultDir = rootProject.ext.get("reactNativeAndroidRoot")
  } else {
    defaultDir = new File(
      projectDir,
      "/../../../node_modules/react-native/android"
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
        parentDir,
        "node_modules/react-native"
      )

      def androidPrebuiltBinaryDir = new File(
        parentDir,
        "node_modules/react-native/android"
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new RuntimeException(
      "${project.name}: unable to locate React Native android sources. " +
        "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  
  // AndroidX dependencies
  implementation 'androidx.appcompat:appcompat:1.5.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  implementation 'androidx.lifecycle:lifecycle-common:2.5.1'
  implementation 'androidx.recyclerview:recyclerview:1.2.1'
  
  // YouTube Player
  implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:11.1.0'
  
  // You'll need to add dependencies for your original project's libraries
  // These should match the dependencies in your main app's build.gradle
  // For example:
  // implementation 'com.hannesdorfmann:adapterdelegates4:4.3.2'
  // implementation 'com.google.firebase:firebase-crashlytics:18.2.13'
  // implementation 'org.apache.commons:commons-lang3:3.12.0'
  // implementation 'com.jakewharton.timber:timber:5.0.1'
}
